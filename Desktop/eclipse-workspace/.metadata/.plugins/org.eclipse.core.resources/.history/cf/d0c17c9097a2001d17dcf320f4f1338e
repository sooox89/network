package edu.interfaceone;

interface IVehicle
{
	//== int makeYear = 2022;  // 변수가 아닌 상
	// == final int makeYear = 2022;  
	// == public final int makeYear = 2022;
	public static final int makeYear = 2022;
	
	// void start();            //중괄호 없는 추상메서드
	// abstract void start();
	public abstract void start();   
	
	default public void stop()  //중괄호 뒤에 붙는 메서드 : default,private,static 메서드만 가
	{System.out.println("정지한다");	}
	
	private void show()
	{System.out.println("makeYear=" + 
						makeYear); }
	
	public static void turn()          //static > 정적 기억 공간에 있어서 k5.turn()실행 안됨
	//IVehicle interface 멤버는 맞
	{System.out.println("방향 전환한다");}
	
	
	static class Price
	{	int salePercent = 10;	}  // 정적 클래스
	
	default public void driving()
	{}
}

class Car implements IVehicle       
{
	public void driving()
	{
		System.out.println("Car 타고 드라이빙");
	}
	public Car()
	{	
		System.out.println("나는 Car의 기본 생성자");
	}
	@Override  //annotation 주석(?)
	public void start() {
		System.out.println("Car가 출발한다."); }
	
	@Override
	public void stop()   // Interface의 stop() overriding default 메서드는 클래스에 쓰면 안됨 
	{
		System.out.println("차가 정지한다");
	}
	
	
}








public class InterfaceOne0201 {

	public static void main(String[] args) {
	
//	IVehicle iob = new IVehicle();  인터페이스 단독으로 객체 생성 불가
//  IVehicle은 Car의 super클래스
//	Car k5 = new Car();   
	IVehicle k5 = new Car();
	
	
	
	k5.start();
//	k5.turn();  turn() 정적 기억 공간에 있음 (static)
	IVehicle.turn(); 
	k5.stop();
	k5.driving();
	
	
	
	
	
	
		

	}

}
