package edu.oopfirst;

class Person
{ // 초기값 넣기 
	private String name = null ;   //encapsulation 캡슐화 
	private int age = 0 ;
	
	public Person()  // 기본 생성자(default Constructor)..매개변수 parameter가 없
	{
		System.out.println("난 Person 기본 생성자");
	}
	public Person(String pname, int page)
	{
		System.out.println("난 매개변수 두 개인 Person 생성자");
		name = pname ; // 호동객체?or길동객체? : 여기서 name은 호동변수에서 호출된 name
		age = page;
	}
	

	public void setAge(int page)
	{ age = page;}
	
	public int getAge()
	{return age;}
	
	public void setName(String pname) //외부에서 name 멤버 변수에 간접적으로 접근할 수 있는 메서드 생성
	{ name = pname; }
	
	public 	String getName()        
	{ return name ; }
	
	public void talk()   //class안의 member함수 : method
	{
		name = "아무개";
		System.out.println("talk()메서드이다.");	}
	public void breathe()   // public으로 공개해서 상호작용할 수 있게 //talk, breathe 공개된 인터페이
	{ age = 1 ;}
	
}

public class OOPExOne0130 {

	public static void main(String[] args) {
		  Person hodong = new Person("호동", 45);    
		  System.out.printf("hodong.name=%s\n" , hodong.getName());
		  System.out.printf("hodong.age=%d"
		  		+ "\n" , hodong.getAge());
		
		
		  Person gildong = new Person(); // ()를 통해 class 이름과 똑같은 함수 생성 
		  
		  gildong.setName("길동");
		  System.out.printf("gildong.name=%s\n",gildong.getName());
		  
		  gildong.setAge(23);   
		  System.out.printf("gildong.age=%d\n",gildong.getAge());
		  
//		  gildong.name ="길동"; 
//		  System.out.printf("gildong.name=%s\n", gildong.name); 
//		  gildong.age = 23;
//		  System.out.printf("gildong.age=%d\n", gildong.age);
		  gildong.talk();
		  
		 
	
	}

}

